{"version":3,"file":"DigitDisplay-a62b5f01.js","sources":["../../../../components/DigitDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex gap-3 justify-center\">\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[0] }}</div>\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[1] }}</div>\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[2] }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport gsap from 'gsap'\r\nimport { range, shuffle } from 'lodash-es'\r\nconst props = defineProps<{ target: number }>()\r\nconst emits = defineEmits<{\r\n  (event: 'animation-start'): void,\r\n  (event: 'animation-end'): void,\r\n}>()\r\nconst display = reactive(['0', '0', '0'])\r\nwatch(() => props.target, (newTarget) => {\r\n  emits('animation-start')\r\n  const target = newTarget.toString().padStart(3, '0').split('').map(Number)\r\n  const animateData = range(0, 3).map(i => {\r\n    const shuffled = i === 0 ? shuffle(range(0, 4)) : shuffle(range(0, 10));\r\n    const targetIndex = shuffled.indexOf(target[i])\r\n    const ticks = i === 0 ? 4 * (i + 7) + targetIndex : 10 * (i + 7) + targetIndex;\r\n    return { shuffled, ticks }\r\n  })\r\n  const startTicks = [0, 0, 0]\r\n  const onComplete =() => { emits('animation-end') }\r\n  const onUpdate = () => animateData\r\n    .forEach((datum, i) => {\r\n      const displayIndex = i===0 ? Math.round(startTicks[i]) % 4: Math.round(startTicks[i]) % 10 \r\n      display[i] = datum.shuffled[displayIndex].toString()\r\n      display[i] = datum.shuffled[displayIndex].toString()\r\n    })\r\n  gsap.timeline({ onUpdate, onComplete })\r\n    .to(startTicks, { '0': animateData[0].ticks, duration: 5 }, 0)\r\n    .to(startTicks, { '1': animateData[1].ticks, duration: 6 }, 0)\r\n    .to(startTicks, { '2': animateData[2].ticks, duration: 7 }, 0)\r\n})\r\n</script>\r\n<!-- <template>\r\n  <div class=\"flex gap-3 justify-center\">\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[0] }}</div>\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[1] }}</div>\r\n    <div class=\"font-mono text-9xl bg-slate-200 shadow-inner rounded p-2 text-center opacity-60\">{{ display[2] }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport gsap from 'gsap'\r\nimport { range, shuffle } from 'lodash-es'\r\n\r\nconst props = defineProps<{ target: number}>()\r\n\r\nconst emits = defineEmits<{\r\n  (event: 'animation-start'): void,\r\n  (event: 'animation-end'): void,\r\n}>()\r\n\r\nconst startTicks = [0, 0, 0]\r\nconst display = reactive(['0', '0', '0'])\r\n// first draw and first digit change\r\nwatch(() => props.target, (newTarget) => {\r\n  emits('animation-start')\r\n  // recevie new target\r\n  const target = newTarget.toString().padStart(3, '0').split('')\r\n  // shuffle and calculate ticks\r\n  const animateData = range(0, 3).map(i => {\r\n    const shuffled = shuffle(range(0, 10)).map(String)\r\n    const targetIndex = shuffled.indexOf(target[i])\r\n    const ticks = 10 * (i + 7) + targetIndex\r\n    return { shuffled, ticks }\r\n  })\r\n  const onComplete = () => {\r\n    emits('animation-end')\r\n  }\r\n  // first draw\r\n  const onUpdate = () => animateData\r\n    .forEach((datum, i) => {\r\n      const displayIndex = Math.round(startTicks[i]) % 10\r\n      display[i] = datum.shuffled[displayIndex]\r\n    })\r\n  // first digit change\r\n  gsap.timeline({ onUpdate, onComplete })\r\n    .to(startTicks, { '0': animateData[0].ticks, duration: 5 }, 0)\r\n    .to(startTicks, { '1': animateData[1].ticks, duration: 6 }, 0)\r\n    .to(startTicks, { '2': animateData[2].ticks, duration: 7 }, 0)\r\n  console.log(\"digit0 change\")\r\n})\r\n\r\n</script> -->"],"names":[],"mappings":";;;;;;;;;;;;;AAgBA,UAAA,UAAA,SAAA,CAAA,KAAA,KAAA,GAAA,CAAA;AACA,UAAA,MAAA,MAAA,QAAA,CAAA,cAAA;AACE,YAAA,iBAAA;AACA,YAAA,SAAA,UAAA,SAAA,EAAA,SAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,IAAA,MAAA;AACA,YAAA,cAAA,MAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA;AACE,cAAA,WAAA,MAAA,IAAA,QAAA,MAAA,GAAA,CAAA,CAAA,IAAA,QAAA,MAAA,GAAA,EAAA,CAAA;AACA,cAAA,cAAA,SAAA,QAAA,OAAA,CAAA,CAAA;AACA,cAAA,QAAA,MAAA,IAAA,KAAA,IAAA,KAAA,cAAA,MAAA,IAAA,KAAA;AACA,eAAA,EAAA,UAAA;MAAyB,CAAA;AAE3B,YAAA,aAAA,CAAA,GAAA,GAAA,CAAA;AACA,YAAA,aAAA,MAAA;AAA0B,cAAA,eAAA;AAAA,MAAqB;AAC/C,YAAA,WAAA,MAAA,YAAA,QAAA,CAAA,OAAA,MAAA;AAEI,cAAA,eAAA,MAAA,IAAA,KAAA,MAAA,WAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,WAAA,CAAA,CAAA,IAAA;AACA,gBAAA,CAAA,IAAA,MAAA,SAAA,YAAA,EAAA;AACA,gBAAA,CAAA,IAAA,MAAA,SAAA,YAAA,EAAA;MAAmD,CAAA;AAEvD,WAAA,SAAA,EAAA,UAAA,WAAA,CAAA,EAAA,GAAA,YAAA,EAAA,KAAA,YAAA,CAAA,EAAA,OAAA,UAAA,EAAA,GAAA,CAAA,EAAA,GAAA,YAAA,EAAA,KAAA,YAAA,CAAA,EAAA,OAAA,UAAA,KAAA,CAAA,EAAA,GAAA,YAAA,EAAA,KAAA,YAAA,CAAA,EAAA,OAAA,UAAA,EAAA,GAAA,CAAA;AAAA,IAG+D,CAAA;;;;;;;;;;;;"}